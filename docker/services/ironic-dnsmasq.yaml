heat_template_version: ocata

description: >
  OpenStack containerized Ironic dnsmasq service for use when not using Neutron
  for DHCP.(EXPERIMENTAL)

parameters:
  DockerNamespace:
    description: namespace
    default: 'tripleoupstream'
    type: string
  DockerIronicDnsmasqImage:
    description: image
    default: 'centos-binary-ironic-inspector:latest'
    type: string
  EndpointMap:
    default: {}
    description: Mapping of service endpoint -> protocol. Typically set
                 via parameter_defaults in the resource registry.
    type: json
  ServiceNetMap:
    default: {}
    description: Mapping of service_name -> network name. Typically set
                 via parameter_defaults in the resource registry.  This
                 mapping overrides those in ServiceNetMapDefaults.
    type: json
  DefaultPasswords:
    default: {}
    type: json
  RoleName:
    default: ''
    description: Role name on which the service is applied
    type: string
  RoleParameters:
    default: {}
    description: Parameters specific to the role
    type: json

resources:

  ContainersCommon:
    type: ./containers-common.yaml

outputs:
  role_data:
    description: Role data for the Ironic dnsmasq role.
    value:
      service_name: ironic-dnsmasq
      config_settings: {}
      step_config: ''
      service_config_settings: {}
      # BEGIN DOCKER SETTINGS
      puppet_config:
          config_volume: ironic_dnsmasq
          step_config: ''
          config_image: &ironic_dnsmasq_image
            list_join:
              - '/'
              - [ {get_param: DockerNamespace}, {get_param: DockerIronicDnsmasqImage} ]
      kolla_config:
         /var/lib/kolla/config_files/ironic_dnsmasq.json:
           command: |
             dnsmasq --no-hosts --no-resolv --strict-order --except-interface=lo --pid-file=/var/lib/ironic/dnsmasq/pid --dhcp-hostsfile=/var/lib/ironic/dnsmasq/host --addn-hosts=/var/lib/ironic/dnsmasq/addn_hosts --dhcp-optsfile=/var/lib/ironic/dnsmasq/opts --dhcp-leasefile=/var/lib/ironic/dnsmasq/leases --dhcp-match=set:ipxe,175 --bind-interfaces --dhcp-option-force=option:mtu,1500 --dhcp-lease-max=256 -C /var/lib/ironic/dnsmasq/config -d
      docker_config:
        step_4:
          ironic_dnsmasq:
            start_order: 93
            image: *ironic_dnsmasq_image
            user: root
            privileged: true
            net: host
            restart: always
            volumes:
              - /etc/hosts:/etc/hosts:ro
              - /etc/localtime:/etc/localtime:ro
              # OpenSSL trusted CAs
              - /etc/pki/ca-trust/extracted:/etc/pki/ca-trust/extracted:ro
              - /etc/pki/tls/certs/ca-bundle.crt:/etc/pki/tls/certs/ca-bundle.crt:ro
              - /etc/pki/tls/certs/ca-bundle.trust.crt:/etc/pki/tls/certs/ca-bundle.trust.crt:ro
              - /etc/pki/tls/cert.pem:/etc/pki/tls/cert.pem:ro
              # Syslog socket
              - /dev/log:/dev/log
              - /var/lib/kolla/config_files/ironic_dnsmasq.json:/var/lib/kolla/config_files/config.json:ro
              - /var/lib/ironic/dnsmasq:/var/lib/ironic/dnsmasq
              - /etc/hosts:/etc/hosts:ro
              - /etc/localtime:/etc/localtime:ro
            environment:
              - KOLLA_CONFIG_STRATEGY=COPY_ALWAYS
      host_prep_tasks:
        - name: create persistent ironic-dnsmasq directory
          file:
            path: /var/lib/ironic/dnsmasq
            state: directory
        - name: create initial empty ironic-dnsmasq config
          file:
            path: /var/lib/ironic/dnsmasq/config
            state: touch
